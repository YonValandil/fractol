définir x1 = -2.1
définir x2 = 0.6
définir y1 = -1.2
définir y2 = 1.2
définir zoom = 100 // pour une distance de 1 sur le plan, on a 100 pixel sur l'image
définir iteration_max = 50

définir image_x = (x2 - x1) * zoom
définir image_y = (y2 - y1) * zoom

Pour x = 0 tant que x < image_x par pas de 1
    Pour y = 0 tant que y < image_y par pas de 1
        définir c_r = x / zoom + x1
        définir c_i = y / zoom + y1
        définir z_r = 0
        définir z_i = 0
        définir i = 0

        Faire
            définir tmp = z_r
            z_r = z_r*z_r - z_i*z_i + c_r
            z_i = 2*z_i*tmp + c_i
            i = i+1
        Tant que z_r*z_r + z_i*z_i < 4 et i < iteration_max

        si i = iteration_max
            dessiner en noir le pixel de coordonné (x; x)
        sinon
            dessiner avec couleur rgb(0, 0, i*255/iterations_max) le pixel de coordonné (x; x)
        finSi
    finPour
finPour

--------------------------------------------------------

  VARIABLES
     x EST_DU_TYPE NOMBRE = x
     y EST_DU_TYPE NOMBRE = y
     ReZ EST_DU_TYPE NOMBRE = z_r
     ImZ EST_DU_TYPE NOMBRE = z_i
     Re EST_DU_TYPE NOMBRE = c_r
     Im EST_DU_TYPE NOMBRE = c_i
     xmin EST_DU_TYPE NOMBRE = x1
     xmax EST_DU_TYPE NOMBRE = x2
    ymin EST_DU_TYPE NOMBRE = y1
    ymax EST_DU_TYPE NOMBRE = y2
    i EST_DU_TYPE NOMBRE = i
    j EST_DU_TYPE NOMBRE = j
    n EST_DU_TYPE NOMBRE = n
    profondeur EST_DU_TYPE NOMBRE = deep
  DEBUT_ALGORITHME
    profondeur PREND_LA_VALEUR 30
    xmin PREND_LA_VALEUR -1.5
    xmax PREND_LA_VALEUR 0.5
    ymin PREND_LA_VALEUR -1
    ymax PREND_LA_VALEUR ymin+xmax-xmin
    x PREND_LA_VALEUR xmin
    POUR i ALLANT_DE 0 A 450
      DEBUT_POUR
      x PREND_LA_VALEUR xmin+(xmax-xmin)*i/450
      POUR j ALLANT_DE 0 A 450
        DEBUT_POUR
        y PREND_LA_VALEUR ymin+(ymax-ymin)*j/450
        ReZ PREND_LA_VALEUR 0
        ImZ PREND_LA_VALEUR 0
        n PREND_LA_VALEUR 0
        TANT_QUE (n<profondeur ET ReZ*ReZ+ImZ*ImZ<4) FAIRE
          DEBUT_TANT_QUE
          Re PREND_LA_VALEUR ReZ
          Im PREND_LA_VALEUR ImZ
          ReZ PREND_LA_VALEUR Re*Re-Im*Im+x
          ImZ PREND_LA_VALEUR 2*Re*Im+y
          n PREND_LA_VALEUR n+1
          FIN_TANT_QUE
        SI (n==profondeur) ALORS
          DEBUT_SI
          TRACER_POINT (i,j)
          FIN_SI
          SINON
            DEBUT_SINON
            TRACER_POINT (i,j)
            FIN_SINON
        FIN_POUR
      FIN_POUR
  FIN_ALGORITHME
